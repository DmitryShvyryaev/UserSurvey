DROP TABLE user_roles IF EXISTS;
DROP TABLE answers IF EXISTS;
DROP TABLE surveys IF EXISTS;
DROP TABLE question_options IF EXISTS;
DROP TABLE questions IF EXISTS;
DROP TABLE survey_details IF EXISTS;
DROP TABLE users IF EXISTS;

DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE global_seq AS BIGINT START WITH 100000;

CREATE TABLE users
(
    id       BIGINT GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    name     VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL
);
CREATE UNIQUE INDEX user_name_idx ON users (name);

CREATE TABLE user_roles
(
    user_id BIGINT       NOT NULL,
    role    VARCHAR(255) NOT NULL,
    CONSTRAINT user_roles_idx UNIQUE (user_id, role),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE survey_details
(
    id          BIGINT GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    description VARCHAR(255) NOT NULL
);

CREATE TABLE questions
(
    id               BIGINT GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    text             VARCHAR(255) NOT NULL,
    type             VARCHAR(255) NOT NULL,
    survey_detail_id BIGINT       NOT NULL,
    FOREIGN KEY (survey_detail_id) REFERENCES survey_details (id) ON DELETE CASCADE
);

CREATE TABLE question_options
(
    question_id BIGINT       NOT NULL,
    option      VARCHAR(255) NOT NULL,
    CONSTRAINT question_option_idx UNIQUE (question_id, option),
    FOREIGN KEY (question_id) REFERENCES questions (id) ON DELETE CASCADE
);

CREATE TABLE surveys
(
    id               BIGINT GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
    start_date       DATE   NOT NULL,
    end_date         DATE,
    survey_detail_id BIGINT NOT NULL,
    user_id          BIGINT NOT NULL,
    FOREIGN KEY (survey_detail_id) REFERENCES survey_details (id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE answers
(
    text        VARCHAR(255) NOT NULL,
    survey_id   BIGINT       NOT NULL,
    question_id BIGINT       NOT NULL,
    FOREIGN KEY (survey_id) REFERENCES surveys (id) ON DELETE CASCADE,
    FOREIGN KEY (question_id) REFERENCES questions (id) ON DELETE CASCADE
)



